import { Video as VideoBase } from './common';
export * from './common';
export declare class Video extends VideoBase {
    private _textureView;
    private _subtitlesView;
    private videoWidth;
    private videoHeight;
    private _src;
    private _subtitlesSrc;
    private mediaState;
    private textureSurface;
    private textureSurfaceSet;
    private mediaPlayer;
    private mediaController;
    private preSeekTime;
    private _onReadyEmitEvent;
    private videoOpened;
    private eventPlaybackReady;
    private eventPlaybackStart;
    private lastTimerUpdate;
    private interval;
    private _suspendLocation;
    private _boundStart;
    private _boundStop;
    private enableSubtitles;
    TYPE: {
        DETECT: number;
        SS: number;
        DASH: number;
        HLS: number;
        OTHER: number;
    };
    nativeView: any;
    player: any;
    constructor();
    get playState(): any;
    createNativeView(): any;
    initNativeView(): void;
    disposeNativeView(): void;
    disableEventTracking(): void;
    _setupMediaPlayerListeners: () => void;
    _setupMediaController(): void;
    _detectTypeFromSrc(uri: any): number;
    _openVideo(): void;
    _detectSubtitleTypeFromSrc(uri: any): any;
    _setNativeVideo(nativeVideo: any): void;
    setNativeSource(nativePlayerSrc: any): void;
    _updateSubtitles(subtitlesSrc: any): void;
    play(): void;
    pause(): void;
    mute(mute: any): void;
    stop(): void;
    _addReadyEvent(value: any): void;
    seekToTime(ms: any): void;
    isPlaying(): any;
    getDuration(): any;
    getCurrentTime(): any;
    setVolume(volume: any): void;
    destroy(): void;
    release(): void;
    suspendEvent(): void;
    resumeEvent(): void;
    startCurrentTimer(): void;
    fireCurrentTimeEvent(): void;
    stopCurrentTimer(): void;
}
